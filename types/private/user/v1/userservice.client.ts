// @generated by protobuf-ts 2.11.1 with parameter server_generic
// @generated from protobuf file "private/user/v1/userservice.proto" (package "private.user.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./userservice";
import type { GetUserByEmailResponse } from "./userservice";
import type { GetUserByEmailRequest } from "./userservice";
import type { GetUserByIDResponse } from "./userservice";
import type { GetUserByIDRequest } from "./userservice";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateUserResponse } from "./userservice";
import type { CreateUserRequest } from "./userservice";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service private.user.v1.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: CreateUser
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse>;
    /**
     * @generated from protobuf rpc: GetUserByID
     */
    getUserByID(input: GetUserByIDRequest, options?: RpcOptions): UnaryCall<GetUserByIDRequest, GetUserByIDResponse>;
    /**
     * @generated from protobuf rpc: GetUserByEmail
     */
    getUserByEmail(input: GetUserByEmailRequest, options?: RpcOptions): UnaryCall<GetUserByEmailRequest, GetUserByEmailResponse>;
}
/**
 * @generated from protobuf service private.user.v1.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateUser
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateUserRequest, CreateUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserByID
     */
    getUserByID(input: GetUserByIDRequest, options?: RpcOptions): UnaryCall<GetUserByIDRequest, GetUserByIDResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserByIDRequest, GetUserByIDResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserByEmail
     */
    getUserByEmail(input: GetUserByEmailRequest, options?: RpcOptions): UnaryCall<GetUserByEmailRequest, GetUserByEmailResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserByEmailRequest, GetUserByEmailResponse>("unary", this._transport, method, opt, input);
    }
}
